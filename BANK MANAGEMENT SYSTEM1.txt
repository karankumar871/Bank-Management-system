class Bank:
    def __init__(self):
        self.accounts = {}
        self.credit_cards = {}
        self.loans = {}
        self.users = {}

    def login(self, username, password):
        return username in self.users and self.users[username] == password

    def create_user(self, username, password):
        if username not in self.users:
            self.users[username] = password
            print(f"User {username} created successfully!")
        else:
            print("Username already exists. Please choose another one.")

    def create_account(self, account_number, holder_name, initial_balance=0):
        if account_number not in self.accounts:
            self.accounts[account_number] = {"holder_name": holder_name, "balance": initial_balance}
            print(f"Account created for {holder_name} with account number {account_number}")
        else:
            print(f"Account with account number {account_number} already exists.")

    def create_credit_card(self, account_number, credit_limit=0):
        if account_number in self.accounts and account_number not in self.credit_cards:
            self.credit_cards[account_number] = {"credit_limit": credit_limit, "balance": 0}
            print(f"Credit card created for account number {account_number} with credit limit {credit_limit}")
        elif account_number not in self.accounts:
            print(f"Account with account number {account_number} not found.")
        else:
            print(f"Credit card already exists for account number {account_number}.")

    def create_loan(self, account_number, loan_amount=0):
        if account_number in self.accounts and account_number not in self.loans:
            gst = loan_amount * 0.3
            total_amount = loan_amount + gst
            self.loans[account_number] = {"loan_amount": loan_amount, "gst": gst, "total_amount": total_amount,
                                          "remaining_amount": total_amount}  # Initialize remaining_amount
            print(
                f"Loan created for account number {account_number} with loan amount {loan_amount} and GST {gst}. Total amount: {total_amount}")
        elif account_number not in self.accounts:
            print(f"Account with account number {account_number} not found.")
        else:
            print(f"Loan already exists for account number {account_number}.")

    def pay_loan(self, account_number, amount):
        if account_number in self.accounts and account_number in self.loans:
            if self.loans[account_number]["remaining_amount"] >= amount:
                self.loans[account_number]["remaining_amount"] -= amount
                print(
                    f"Paid {amount} towards the loan for account {account_number}. Remaining amount: {self.loans[account_number]['remaining_amount']}")
            else:
                print(f"Exceeded remaining loan amount. Cannot pay more than the remaining loan amount.")
        elif account_number not in self.accounts:
            print(f"Account with account number {account_number} not found.")
        else:
            print(f"No loan found for account number {account_number}.")

    def deposit(self, account_number, amount):
        if account_number in self.accounts:
            self.accounts[account_number]["balance"] += amount
            print(
                f"Deposited {amount} into account {account_number}. New balance: {self.accounts[account_number]['balance']}")
        else:
            print(f"Account with account number {account_number} not found.")

    def withdraw(self, account_number, amount):
        if account_number in self.accounts:
            if self.accounts[account_number]["balance"] >= amount:
                self.accounts[account_number]["balance"] -= amount
                print(
                    f"Withdrew {amount} from account {account_number}. New balance: {self.accounts[account_number]['balance']}")
            else:
                print(f"Insufficient funds in account {account_number}.")
        else:
            print(f"Account with account number {account_number} not found.")

    def check_balance(self, account_number):
        if account_number in self.accounts:
            balance = self.accounts[account_number]["balance"]
            print(f"Balance in account {account_number}: {balance}")
        else:
            print(f"Account with account number {account_number} not found.")


def main():
    bank = Bank()

    while True:
        print("\nBank Management System:")
        print("1. Login")
        print("2. Create User")
        print("3. Create Account")
        print("4. Create Credit Card")
        print("5. Create Loan")
        print("6. Pay Loan")
        print("7. Deposit")
        print("8. Withdraw")
        print("9. Check Balance")
        print("10. Exit")

        choice = input("Enter your choice (1-10): ")

        if choice == "1":
            username = input("Enter username: ")
            password = input("Enter password: ")
            if bank.login(username, password):
                print("Login successful!")
            else:
                print("Invalid username or password.")

        elif choice == "2":
            new_username = input("Enter new username: ")
            new_password = input("Enter new password: ")
            bank.create_user(new_username, new_password)

        elif choice == "3":
            account_number = input("Enter account number: ")
            holder_name = input("Enter account holder name: ")
            initial_balance = float(input("Enter initial balance (default is 0): ") or 0)
            bank.create_account(account_number, holder_name, initial_balance)

        elif choice == "4":
            account_number = input("Enter account number: ")
            credit_limit = float(input("Enter credit limit: "))
            bank.create_credit_card(account_number, credit_limit)

        elif choice == "5":
            account_number = input("Enter account number: ")
            loan_amount = float(input("Enter loan amount: "))
            bank.create_loan(account_number, loan_amount)

        elif choice == "6":
            account_number = input("Enter account number: ")
            amount = float(input("Enter payment amount towards the loan: "))
            bank.pay_loan(account_number, amount)

        elif choice == "7":
            account_number = input("Enter account number: ")
            amount = float(input("Enter deposit amount: "))
            bank.deposit(account_number, amount)

        elif choice == "8":
            account_number = input("Enter account number: ")
            amount = float(input("Enter withdrawal amount: "))
            bank.withdraw(account_number, amount)

        elif choice == "9":
            account_number = input("Enter account number: ")
            bank.check_balance(account_number)

        elif choice == "10":
            print("Exiting the Bank Management System. Goodbye!")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 10.")

if __name__ == "__main__":
    main()
